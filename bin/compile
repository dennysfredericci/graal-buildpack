#!/usr/bin/env bash

# fail fast
set -e

# parse args
export BUILD_DIR=$1
export CACHE_DIR=$2
export ENV_DIR=$3

source <(curl --retry 3 -fsSL "https://lang-common.s3.amazonaws.com/buildpack-stdlib/v8/stdlib.sh")

export_env $ENV_DIR "."

install_graal() {
  local jdk_dir=${1:?}
  local url=${2:?}

  rm -rf $jdk_dir # clobber any previously installed jdk
  mkdir -p $jdk_dir

  echo "-----> Installing GraalVM"
  curl --retry 3 -sL "$url" | tar xzm -C $jdk_dir --strip-components=1
  echo "       - done"
}

create_profile_scripts() {
  local home=${1:?}
  local url=${2:?}

  mkdir -p $home/.profile.d

  echo "-----> Configuring"
  curl -o $home/.profile.d/graal.sh -sL "$url/opt/jvmcommon.sh"
  curl -o $home/.profile.d/jdbc.sh -sL "$url/opt/jdbc.sh"
  echo "       - done"
}

create_export_script() {
  local jdk_dir=${1:?}
  local home=${2:?}

  if [ -w ${home} ]; then
    cat << EOF > ${home}/export
export JAVA_HOME=$jdk_dir
export PATH=\$JAVA_HOME/bin:\$PATH
export LD_LIBRARY_PATH="\$JAVA_HOME/jre/lib/amd64/server:\$LD_LIBRARY_PATH"
EOF
  fi
}

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
OPT_DIR=$BP_DIR/../opt/

JDK_DIR="$BUILD_DIR/.jdk"
GRAAL_URL="${GRAAL_URL:-https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_linux-x64_bin.tar.gz}"
JVM_COMMON_URL="https://raw.githubusercontent.com/heroku/heroku-buildpack-jvm-common/master/"

install_graal "$JDK_DIR" "$GRAAL_URL"
create_profile_scripts "$BUILD_DIR" "$JVM_COMMON_URL"
create_export_script "$JDK_DIR" "$(pwd)"
